;; read
(defun AreaOfCircle()
	(terpri)
	(princ "Enter Radius: ")
	(setq radius (read))
	(setq area (* 3.1416 radius radius))
	(princ "Area: ")
	(write area))
;; (AreaOfCircle)

;; read-char
(defun wifs()
		(with-input-from-string (stream "Hello world")
														(print (read-char stream))
														(print (read-char stream))
														(print (read-char stream))
														(print (read-char stream))
														(print (read-char stream))
														(print (read-char stream))
														(print (read-char stream))
														(print (read-char stream))
														(print (read-char stream))
														(print (read-char stream))
														(print (peek-char nil stream nil 'the-end))
														(values))
)
;; doubles it
(defun DoubleNumber()
	(terpri)
	(princ "Enter Number : ")
	(setq n1 (read))
	(setq doubled (* 2.0 n1))
	(princ "The Number : ")
	(write doubled)
	)
;; (DoubleNumber)


;; format
(defun AreaOfCircle()
	(terpri)
	(princ "Enter Radius: ")
	(setq radius (read))
	(setq area (* 3.1416 radius radius))
	(format t "Radius: = ~F~% Area = ~F" radius area)
	)
(AreaOfCircle)
